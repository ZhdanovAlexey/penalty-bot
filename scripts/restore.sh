#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –±—ç–∫–∞–ø–æ–≤ Telegram –±–æ—Ç–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./restore.sh [backup_file]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

info() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] INFO: $1${NC}"
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
APP_DIR="/opt/penalty-bot"
BACKUP_BASE_DIR="/var/backups/penalty-bot"
BACKUP_FILE="$1"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤
show_available_backups() {
    log "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
    echo ""
    
    if [ ! -d "$BACKUP_BASE_DIR" ]; then
        error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $BACKUP_BASE_DIR"
        return 1
    fi
    
    local backup_count=0
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—ç–∫–∞–ø—ã –¥–∞–Ω–Ω—ã—Ö
    echo "üóÉÔ∏è  –ë—ç–∫–∞–ø—ã –¥–∞–Ω–Ω—ã—Ö:"
    find "$BACKUP_BASE_DIR" -name "penalty-bot-data-*.tar.gz" -type f -printf "%T@ %p\n" 2>/dev/null | \
    sort -nr | \
    head -10 | \
    while read -r timestamp filepath; do
        local date_str=$(date -d "@$timestamp" '+%Y-%m-%d %H:%M:%S' 2>/dev/null || date -r "$timestamp" '+%Y-%m-%d %H:%M:%S')
        local size=$(du -h "$filepath" | cut -f1)
        echo "  $(basename "$filepath") - $date_str ($size)"
        backup_count=$((backup_count + 1))
    done
    
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–µ –±—ç–∫–∞–ø—ã
    echo "üì¶ –ü–æ–ª–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
    find "$BACKUP_BASE_DIR" -name "penalty-bot-full-*.tar.gz" -type f -printf "%T@ %p\n" 2>/dev/null | \
    sort -nr | \
    head -5 | \
    while read -r timestamp filepath; do
        local date_str=$(date -d "@$timestamp" '+%Y-%m-%d %H:%M:%S' 2>/dev/null || date -r "$timestamp" '+%Y-%m-%d %H:%M:%S')
        local size=$(du -h "$filepath" | cut -f1)
        echo "  $(basename "$filepath") - $date_str ($size)"
    done
    
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—ç–∫–∞–ø—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    echo "‚öôÔ∏è  –ë—ç–∫–∞–ø—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
    find "$BACKUP_BASE_DIR" -name "penalty-bot-config-*.tar.gz" -type f -printf "%T@ %p\n" 2>/dev/null | \
    sort -nr | \
    head -5 | \
    while read -r timestamp filepath; do
        local date_str=$(date -d "@$timestamp" '+%Y-%m-%d %H:%M:%S' 2>/dev/null || date -r "$timestamp" '+%Y-%m-%d %H:%M:%S')
        local size=$(du -h "$filepath" | cut -f1)
        echo "  $(basename "$filepath") - $date_str ($size)"
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –±—ç–∫–∞–ø–∞
get_backup_type() {
    local backup_file="$1"
    local filename=$(basename "$backup_file")
    
    if [[ "$filename" == *"data"* ]]; then
        echo "data"
    elif [[ "$filename" == *"full"* ]]; then
        echo "full"
    elif [[ "$filename" == *"config"* ]]; then
        echo "config"
    else
        echo "unknown"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
create_pre_restore_backup() {
    local timestamp=$(date +%Y%m%d-%H%M%S)
    local backup_file="$BACKUP_BASE_DIR/penalty-bot-pre-restore-$timestamp.tar.gz"
    
    log "–°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º..."
    
    if [ -d "$APP_DIR" ]; then
        tar -czf "$backup_file" \
            --exclude="$APP_DIR/venv" \
            --exclude="$APP_DIR/logs/*.log" \
            --exclude="$APP_DIR/__pycache__" \
            --exclude="$APP_DIR/.git" \
            -C "$(dirname "$APP_DIR")" \
            "$(basename "$APP_DIR")" 2>/dev/null || {
            warn "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"
            return 1
        }
        
        local size=$(du -h "$backup_file" | cut -f1)
        log "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $(basename "$backup_file") ($size)"
    else
        warn "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞
stop_bot() {
    log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞..."
    
    if systemctl is-active --quiet penalty-bot 2>/dev/null; then
        systemctl stop penalty-bot
        log "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        warn "–°–µ—Ä–≤–∏—Å penalty-bot –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
start_bot() {
    log "–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞..."
    
    if systemctl is-enabled --quiet penalty-bot 2>/dev/null; then
        systemctl start penalty-bot
        sleep 3
        
        if systemctl is-active --quiet penalty-bot; then
            log "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        else
            error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
            return 1
        fi
    else
        warn "–°–µ—Ä–≤–∏—Å penalty-bot –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
restore_data() {
    local backup_file="$1"
    
    log "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑: $(basename "$backup_file")"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    mkdir -p "$APP_DIR"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    tar -xzf "$backup_file" -C "$APP_DIR" || {
        error "–û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"
        return 1
    }
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chown -R root:root "$APP_DIR/data"
    chmod -R 755 "$APP_DIR/data"
    
    log "‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞
restore_full() {
    local backup_file="$1"
    
    log "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –±—ç–∫–∞–ø –∏–∑: $(basename "$backup_file")"
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é (–∫—Ä–æ–º–µ venv –∏ –ª–æ–≥–æ–≤)
    if [ -d "$APP_DIR" ]; then
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        local temp_dir=$(mktemp -d)
        [ -d "$APP_DIR/venv" ] && mv "$APP_DIR/venv" "$temp_dir/" 2>/dev/null || true
        [ -d "$APP_DIR/logs" ] && mv "$APP_DIR/logs" "$temp_dir/" 2>/dev/null || true
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        rm -rf "$APP_DIR"
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–ª–Ω—ã–π –±—ç–∫–∞–ø
        tar -xzf "$backup_file" -C "$(dirname "$APP_DIR")" || {
            error "–û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞"
            return 1
        }
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        [ -d "$temp_dir/venv" ] && mv "$temp_dir/venv" "$APP_DIR/" 2>/dev/null || true
        [ -d "$temp_dir/logs" ] && mv "$temp_dir/logs" "$APP_DIR/" 2>/dev/null || true
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        rm -rf "$temp_dir"
    else
        # –ü—Ä–æ—Å—Ç–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –µ—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ –±—ã–ª–æ
        tar -xzf "$backup_file" -C "$(dirname "$APP_DIR")" || {
            error "–û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞"
            return 1
        }
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chown -R root:root "$APP_DIR"
    chmod +x "$APP_DIR"/*.py 2>/dev/null || true
    chmod +x "$APP_DIR/scripts"/*.sh 2>/dev/null || true
    
    log "‚úÖ –ü–æ–ª–Ω—ã–π –±—ç–∫–∞–ø –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
restore_config() {
    local backup_file="$1"
    
    log "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑: $(basename "$backup_file")"
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    local temp_dir=$(mktemp -d)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    tar -xzf "$backup_file" -C "$temp_dir" || {
        error "–û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        rm -rf "$temp_dir"
        return 1
    }
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    [ -f "$temp_dir/.env" ] && cp "$temp_dir/.env" "$APP_DIR/" && log "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω .env"
    [ -f "$temp_dir/service_account.json" ] && cp "$temp_dir/service_account.json" "$APP_DIR/data/" && log "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω service_account.json"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    [ -f "$APP_DIR/.env" ] && chmod 600 "$APP_DIR/.env"
    [ -f "$APP_DIR/data/service_account.json" ] && chmod 600 "$APP_DIR/data/service_account.json"
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    rm -rf "$temp_dir"
    
    log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
confirm_restore() {
    local backup_file="$1"
    local backup_type="$2"
    
    echo ""
    warn "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞!"
    echo ""
    echo "–§–∞–π–ª –±—ç–∫–∞–ø–∞: $(basename "$backup_file")"
    echo "–¢–∏–ø –±—ç–∫–∞–ø–∞: $backup_type"
    echo "–†–∞–∑–º–µ—Ä: $(du -h "$backup_file" | cut -f1)"
    echo ""
    
    case "$backup_type" in
        "data")
            echo "–ë—É–¥—É—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö"
            ;;
        "full")
            echo "–ë—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–∫–æ–¥, –¥–∞–Ω–Ω—ã–µ, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è)"
            ;;
        "config")
            echo "–ë—É–¥—É—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (.env, –∫–ª—é—á–∏ API)"
            ;;
    esac
    
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ? (yes/no): " -r
    if [[ ! $REPLY =~ ^[Yy][Ee][Ss]$ ]]; then
        log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        exit 0
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞ Penalty Bot${NC}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if [[ $EUID -ne 0 ]]; then
        error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
        exit 1
    fi
    
    # –ï—Å–ª–∏ —Ñ–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ —É–∫–∞–∑–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ
    if [ -z "$BACKUP_FILE" ]; then
        show_available_backups
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <backup_file>"
        echo "–ü—Ä–∏–º–µ—Ä: $0 /var/backups/penalty-bot/penalty-bot-data-20241225-120000.tar.gz"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –±—ç–∫–∞–ø–∞
    if [ ! -f "$BACKUP_FILE" ]; then
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—ç–∫–∞–ø–æ–≤
        if [ -f "$BACKUP_BASE_DIR/$BACKUP_FILE" ]; then
            BACKUP_FILE="$BACKUP_BASE_DIR/$BACKUP_FILE"
        else
            error "–§–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $BACKUP_FILE"
            exit 1
        fi
    fi
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±—ç–∫–∞–ø–∞
    local backup_type=$(get_backup_type "$BACKUP_FILE")
    if [ "$backup_type" = "unknown" ]; then
        error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –±—ç–∫–∞–ø–∞: $(basename "$BACKUP_FILE")"
        exit 1
    fi
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    confirm_restore "$BACKUP_FILE" "$backup_type"
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    create_pre_restore_backup
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
    stop_bot
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    case "$backup_type" in
        "data")
            restore_data "$BACKUP_FILE"
            ;;
        "full")
            restore_full "$BACKUP_FILE"
            ;;
        "config")
            restore_config "$BACKUP_FILE"
            ;;
    esac
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    start_bot
    
    echo ""
    log "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    if systemctl is-active --quiet penalty-bot 2>/dev/null; then
        log "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
    else
        warn "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞: systemctl status penalty-bot"
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 