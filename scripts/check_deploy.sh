#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./check_deploy.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é...${NC}"
echo ""

# –°—á–µ—Ç—á–∏–∫–∏
ERRORS=0
WARNINGS=0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:"

if [ -f "bot.py" ]; then
    log "bot.py –Ω–∞–π–¥–µ–Ω"
else
    error "bot.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((ERRORS++))
fi

if [ -f "requirements.txt" ]; then
    log "requirements.txt –Ω–∞–π–¥–µ–Ω"
else
    error "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((ERRORS++))
fi

if [ -f "config.py" ]; then
    log "config.py –Ω–∞–π–¥–µ–Ω"
else
    error "config.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((ERRORS++))
fi

if [ -d "handlers" ]; then
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è handlers –Ω–∞–π–¥–µ–Ω–∞"
else
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è handlers –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    ((ERRORS++))
fi

if [ -d "services" ]; then
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è services –Ω–∞–π–¥–µ–Ω–∞"
else
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è services –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    ((ERRORS++))
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"

if [ -f "env.example" ]; then
    log "env.example –Ω–∞–π–¥–µ–Ω"
else
    error "env.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((ERRORS++))
fi

if [ -f ".env" ]; then
    log ".env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    if grep -q "BOT_TOKEN=" .env && ! grep -q "BOT_TOKEN=your_bot_token_here" .env; then
        log "BOT_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        error "BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env"
        ((ERRORS++))
    fi
    
    if grep -q "SPREADSHEET_ID=" .env && ! grep -q "SPREADSHEET_ID=your_google_spreadsheet_id_here" .env; then
        log "SPREADSHEET_ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        error "SPREADSHEET_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env"
        ((ERRORS++))
    fi
else
    warn ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∏–∑ env.example –ø—Ä–∏ –¥–µ–ø–ª–æ–µ)"
    ((WARNINGS++))
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Sheets credentials
echo "üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Sheets API:"

if [ -d "data" ]; then
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data –Ω–∞–π–¥–µ–Ω–∞"
    
    if [ -f "data/service_account.json" ]; then
        log "service_account.json –Ω–∞–π–¥–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ JSON
        if python3 -m json.tool data/service_account.json > /dev/null 2>&1; then
            log "service_account.json –≤–∞–ª–∏–¥–µ–Ω"
        else
            error "service_account.json —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON"
            ((ERRORS++))
        fi
    else
        error "data/service_account.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
        info "–°–æ–∑–¥–∞–π—Ç–µ Service Account –≤ Google Cloud Console –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ JSON —Ñ–∞–π–ª –≤ data/"
        ((ERRORS++))
    fi
else
    warn "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ)"
    ((WARNINGS++))
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–ª–æ–π —Ñ–∞–π–ª–æ–≤
echo "üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–µ–ø–ª–æ—è:"

if [ -f "Dockerfile" ]; then
    log "Dockerfile –Ω–∞–π–¥–µ–Ω"
else
    warn "Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω (Docker –¥–µ–ø–ª–æ–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)"
    ((WARNINGS++))
fi

if [ -f "docker-compose.yml" ]; then
    log "docker-compose.yml –Ω–∞–π–¥–µ–Ω"
else
    warn "docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω (Docker Compose –¥–µ–ø–ª–æ–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)"
    ((WARNINGS++))
fi

if [ -f "systemd/penalty-bot.service" ]; then
    log "systemd service —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
else
    error "systemd/penalty-bot.service –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((ERRORS++))
fi

if [ -f "scripts/deploy.sh" ]; then
    log "–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–∞–π–¥–µ–Ω"
    if [ -x "scripts/deploy.sh" ]; then
        log "–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    else
        warn "–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π (chmod +x scripts/deploy.sh)"
        ((WARNINGS++))
    fi
else
    error "scripts/deploy.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((ERRORS++))
fi

if [ -f "scripts/update.sh" ]; then
    log "–°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω"
    if [ -x "scripts/update.sh" ]; then
        log "–°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    else
        warn "–°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π (chmod +x scripts/update.sh)"
        ((WARNINGS++))
    fi
else
    error "scripts/update.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((ERRORS++))
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:"

if command -v python3 &> /dev/null; then
    log "Python3 –Ω–∞–π–¥–µ–Ω: $(python3 --version)"
else
    error "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((ERRORS++))
fi

if [ -f "requirements.txt" ]; then
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if grep -q "aiogram" requirements.txt; then
        log "aiogram –Ω–∞–π–¥–µ–Ω –≤ requirements.txt"
    else
        error "aiogram –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ requirements.txt"
        ((ERRORS++))
    fi
    
    if grep -q "google-api-python-client" requirements.txt; then
        log "google-api-python-client –Ω–∞–π–¥–µ–Ω –≤ requirements.txt"
    else
        error "google-api-python-client –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ requirements.txt"
        ((ERRORS++))
    fi
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
echo "üìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:"

if [ -f "README.md" ]; then
    log "README.md –Ω–∞–π–¥–µ–Ω"
else
    warn "README.md –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((WARNINGS++))
fi

if [ -f "DEPLOYMENT.md" ]; then
    log "DEPLOYMENT.md –Ω–∞–π–¥–µ–Ω"
else
    warn "DEPLOYMENT.md –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((WARNINGS++))
fi

if [ -f "QUICK_START.md" ]; then
    log "QUICK_START.md –Ω–∞–π–¥–µ–Ω"
else
    warn "QUICK_START.md –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((WARNINGS++))
fi

echo ""

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo "üìä –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:"
echo "=================="

if [ $ERRORS -eq 0 ] && [ $WARNINGS -eq 0 ]; then
    echo -e "${GREEN}üéâ –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!${NC}"
    echo ""
    echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo ./scripts/deploy.sh"
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É: sudo systemctl status penalty-bot"
elif [ $ERRORS -eq 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏${NC}"
    echo -e "${YELLOW}–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNINGS${NC}"
    echo ""
    echo "–ü—Ä–æ–µ–∫—Ç –º–æ–∂–Ω–æ –¥–µ–ø–ª–æ–∏—Ç—å, –Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è."
else
    echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç –ù–ï –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é${NC}"
    echo -e "${RED}–û—à–∏–±–æ–∫: $ERRORS${NC}"
    echo -e "${YELLOW}–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNINGS${NC}"
    echo ""
    echo "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º."
    exit 1
fi

echo ""
echo "–î–ª—è –¥–µ–ø–ª–æ—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π: sudo ./scripts/deploy.sh"
echo "  Docker:         sudo docker-compose up -d"
echo "  –†—É—á–Ω–æ–π:         —Å–º. DEPLOYMENT.md" 